{"ast":null,"code":"// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role); setCountry(country); setProfile(profile); setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if(contacts.length === 0){\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\n//           Agentic AI Bulk Outreach\n//         </h1>\n//         <SearchForm onSearch={handleSearch} />\n//         {contacts.length > 0 && (\n//           <ContactsTable contacts={contacts} type={contactType} />\n//         )}\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 type=\"file\"\n//                 id=\"attachment\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { GoogleOAuthProvider, googleLogout, useGoogleLogin } from '@react-oauth/google';\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// // Set this to your actual Google OAuth web client ID:\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com \";\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n//     // Google sign in\n//   const login = useGoogleLogin({\n//     onSuccess: async tokenResponse => {\n//       setGoogleToken(tokenResponse.access_token);\n//       // To display user info, fetch their profile:\n//       const resp = await axios.get(\n//         \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//         { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//       );\n//       setUserProfile(resp.data);\n//     },\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\", // or \"auth-code\" for backend exchange\n//   });\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     googleLogout();\n//   };\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role); setCountry(country); setProfile(profile); setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if (!googleToken) {\n//       setStatus(\"Please sign in with Google first.\");\n//       return;\n//     }\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"gmail_token\", googleToken); // <--- Pass the OAuth2 access token\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">\n//             Agentic AI Bulk Outreach\n//           </h1>\n//           {!googleToken ? (\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-primary mb-6\"\n//               onClick={() => login()}\n//             >\n//               Sign in with Google to Send Emails\n//             </button>\n//           ) : (\n//             <div className=\"flex items-center mb-6\">\n//               <span className=\"text-green-800 font-bold mr-4\">\n//                 Signed in as {userProfile?.email}\n//               </span>\n//               <button type=\"button\" className=\"btn btn-secondary\" onClick={logout}>\n//                 Logout\n//               </button>\n//             </div>\n//           )}\n//           <SearchForm onSearch={handleSearch} />\n//           {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n//           {templates.length > 0 && (\n//             <>\n//               <EmailSection\n//                 templates={templates}\n//                 onTemplateSelect={handleTemplateSelect}\n//                 body={body}\n//                 setBody={setBody}\n//                 subject={subject}\n//                 setSubject={setSubject}\n//                 onSend={handleSend}\n//                 status={status}\n//               />\n//               <div className=\"mt-6\">\n//                 <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                   Attach a file (optional)\n//                 </label>\n//                 <input\n//                   type=\"file\"\n//                   id=\"attachment\"\n//                   onChange={handleAttachmentChange}\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                             file:rounded file:border-0\n//                             file:text-sm file:font-semibold\n//                             file:bg-indigo-50 file:text-indigo-700\n//                             hover:file:bg-indigo-100\"\n//                 />\n//               </div>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// }\n// export default App;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { GoogleOAuthProvider, useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com\"; // Your real Google OAuth Web client ID\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   // Google OAuth2 states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n//   const login = useGoogleLogin({\n//     onSuccess: async tokenResponse => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         // Fetch user info for display\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     scope:\n//       \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\",\n//   });\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     googleLogout();\n//   };\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!googleToken) {\n//       setStatus(\"Please sign in with Google to send emails.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"gmail_token\", googleToken); // Pass the OAuth2 access token\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\n//             Agentic AI Bulk Outreach\n//           </h1>\n//           {/* Google Auth: Show sign-in/sign-out status */}\n//           {!googleToken ? (\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-primary mb-6\"\n//               onClick={() => login()}\n//             >\n//               Sign in with Google to Send Emails\n//             </button>\n//           ) : (\n//             <div className=\"flex items-center mb-6\">\n//               <span className=\"text-green-800 font-bold mr-4\">\n//                 Signed in as {userProfile?.email}\n//               </span>\n//               <button\n//                 type=\"button\"\n//                 className=\"btn btn-secondary\"\n//                 onClick={logout}\n//               >\n//                 Logout\n//               </button>\n//             </div>\n//           )}\n//           <SearchForm onSearch={handleSearch} />\n//           {contacts.length > 0 && (\n//             <ContactsTable contacts={contacts} type={contactType} />\n//           )}\n//           {templates.length > 0 && (\n//             <>\n//               <EmailSection\n//                 templates={templates}\n//                 onTemplateSelect={handleTemplateSelect}\n//                 body={body}\n//                 setBody={setBody}\n//                 subject={subject}\n//                 setSubject={setSubject}\n//                 onSend={handleSend}\n//                 status={status}\n//               />\n//               <div className=\"mt-6\">\n//                 <label\n//                   className=\"block mb-2 font-semibold text-gray-700\"\n//                   htmlFor=\"attachment\"\n//                 >\n//                   Attach a file (optional)\n//                 </label>\n//                 <input\n//                   type=\"file\"\n//                   id=\"attachment\"\n//                   onChange={handleAttachmentChange}\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                              file:rounded file:border-0\n//                              file:text-sm file:font-semibold\n//                              file:bg-indigo-50 file:text-indigo-700\n//                              hover:file:bg-indigo-100\"\n//                 />\n//               </div>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// }\n// export default App;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com\";\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   // Google OAuth2 states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n//   const login = useGoogleLogin({\n//     onSuccess: async (tokenResponse) => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     scope:\n//       \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\",\n//   });\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     googleLogout();\n//   };\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!googleToken) {\n//       setStatus(\"Please sign in with Google to send emails.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"gmail_token\", googleToken);\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\n//           Agentic AI Bulk Outreach\n//         </h1>\n//         {!googleToken ? (\n//           <button\n//             type=\"button\"\n//             className=\"btn btn-primary mb-6\"\n//             onClick={() => login()}\n//           >\n//             Sign in with Google to Send Emails\n//           </button>\n//         ) : (\n//           <div className=\"flex items-center mb-6\">\n//             <span className=\"text-green-800 font-bold mr-4\">\n//               Signed in as {userProfile?.email}\n//             </span>\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-secondary\"\n//               onClick={logout}\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         )}\n//         <SearchForm onSearch={handleSearch} />\n//         {contacts.length > 0 && (\n//           <ContactsTable contacts={contacts} type={contactType} />\n//         )}\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label\n//                 className=\"block mb-2 font-semibold text-gray-700\"\n//                 htmlFor=\"attachment\"\n//               >\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 type=\"file\"\n//                 id=\"attachment\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   // NEW: sender email state\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Please enter sender email address.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\"http://localhost:8000/api/send_email_with_attachment\", formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">Agentic AI Bulk Outreach</h1>\n//         {/* NEW: Input field for sender email */}\n//         <div className=\"mb-6\">\n//           <label htmlFor=\"senderEmail\" className=\"font-semibold text-gray-700 mb-1 block\">\n//             Your Email Address\n//           </label>\n//           <input\n//             id=\"senderEmail\"\n//             type=\"email\"\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//             placeholder=\"youremail@example.com\"\n//             value={senderEmail}\n//             onChange={(e) => setSenderEmail(e.target.value)}\n//           />\n//         </div>\n//         <SearchForm onSearch={handleSearch} />\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label\n//                 htmlFor=\"attachment\"\n//                 className=\"block mb-2 font-semibold text-gray-700\"\n//               >\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 id=\"attachment\"\n//                 type=\"file\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                   file:rounded file:border-0\n//                   file:text-sm file:font-semibold\n//                   file:bg-indigo-50 file:text-indigo-700\n//                   hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   // Added sender email state\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Please enter your email address.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\n//           Agentic AI Bulk Outreach\n//         </h1>\n//         {/* NEW sender email input */}\n//         <div className=\"mb-6\">\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\n//             Your Email Address \n//           </label>\n//           <input\n//             id=\"senderEmail\"\n//             type=\"email\"\n//             placeholder=\"youremail@example.com\"\n//             value={senderEmail}\n//             onChange={(e) => setSenderEmail(e.target.value)}\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//           />\n//         </div>\n//         <SearchForm onSearch={handleSearch} />\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 type=\"file\"\n//                 id=\"attachment\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { GoogleOAuthProvider, useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// const CLIENT_ID = \"552274412896-2r5qc6oqsvgje1btr033i6u7uh1q0lpm.apps.googleusercontent.com\";\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n//   // OAuth states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n//   const login = useGoogleLogin({\n//     onSuccess: async (tokenResponse) => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         // Fetch user profile info to display\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\",\n//   });\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     setSenderEmail(\"\");\n//     googleLogout();\n//   };\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!googleToken) {\n//       setStatus(\"Please log in with Google to send emails.\");\n//       return;\n//     }\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Sender email address is required.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\n//           {!googleToken ? (\n//             <button className=\"btn btn-primary mb-6\" onClick={() => login()}>\n//               Sign in with Google to Send Emails\n//             </button>\n//           ) : (\n//             <div className=\"flex items-center mb-6\">\n//               <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\n//               <button className=\"btn btn-secondary\" onClick={logout}>\n//                 Logout\n//               </button>\n//             </div>\n//           )}\n//           {/* Sender Email input can be edited if needed */}\n//           <div className=\"mb-6\">\n//             <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\n//               Sender Email Address\n//             </label>\n//             <input\n//               id=\"senderEmail\"\n//               type=\"email\"\n//               placeholder=\"your-email@example.com\"\n//               value={senderEmail}\n//               onChange={(e) => setSenderEmail(e.target.value)}\n//               className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//             />\n//           </div>\n//           <SearchForm onSearch={handleSearch} />\n//           {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n//           {templates.length > 0 && (\n//             <>\n//               <EmailSection\n//                 templates={templates}\n//                 onTemplateSelect={handleTemplateSelect}\n//                 body={body}\n//                 setBody={setBody}\n//                 subject={subject}\n//                 setSubject={setSubject}\n//                 onSend={handleSend}\n//                 status={status}\n//               />\n//               <div className=\"mt-6\">\n//                 <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                   Attach a file (optional)\n//                 </label>\n//                 <input\n//                   id=\"attachment\"\n//                   type=\"file\"\n//                   onChange={handleAttachmentChange}\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                              file:rounded file:border-0\n//                              file:text-sm file:font-semibold\n//                              file:bg-indigo-50 file:text-indigo-700\n//                              hover:file:bg-indigo-100\"\n//                 />\n//               </div>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// }\n// export default App;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n//   // OAuth states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n//   const login = useGoogleLogin({\n//     onSuccess: async (tokenResponse) => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         // Fetch user profile info to display\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\",\n//   });\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     setSenderEmail(\"\");\n//     googleLogout();\n//   };\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!googleToken) {\n//       setStatus(\"Please log in with Google to send emails.\");\n//       return;\n//     }\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Sender email address is required.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\n//         {!googleToken ? (\n//           <button className=\"btn btn-primary mb-6\" onClick={() => login()}>\n//             Sign in with Google to Send Emails\n//           </button>\n//         ) : (\n//           <div className=\"flex items-center mb-6\">\n//             <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\n//             <button className=\"btn btn-secondary\" onClick={logout}>\n//               Logout\n//             </button>\n//           </div>\n//         )}\n//         {/* Sender Email input can be edited if needed */}\n//         <div className=\"mb-6\">\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\n//             Sender Email Address\n//           </label>\n//           <input\n//             id=\"senderEmail\"\n//             type=\"email\"\n//             placeholder=\"your-email@example.com\"\n//             value={senderEmail}\n//             onChange={(e) => setSenderEmail(e.target.value)}\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//           />\n//         </div>\n//         <SearchForm onSearch={handleSearch} />\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 id=\"attachment\"\n//                 type=\"file\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n//   // OAuth states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n//   const login = useGoogleLogin({\n//     onSuccess: async (tokenResponse) => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         // Fetch user profile info to display\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     onError: (error) => {\n//       console.error(\"Google Login Error:\", error);\n//       setStatus(\"Google login failed. Please try again.\");\n//     },\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//   });\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     setSenderEmail(\"\");\n//     googleLogout();\n//   };\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!googleToken) {\n//       setStatus(\"Please log in with Google to send emails.\");\n//       return;\n//     }\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Sender email address is required.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\n//         {!googleToken ? (\n//           <button \n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-6\"\n//             onClick={() => login()}\n//           >\n//             Sign in with Google to Send Emails\n//           </button>\n//         ) : (\n//           <div className=\"flex items-center mb-6\">\n//             <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\n//             <button \n//               className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-3 rounded text-sm\"\n//               onClick={logout}\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         )}\n//         {/* Sender Email input can be edited if needed */}\n//         <div className=\"mb-6\">\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\n//             Sender Email Address\n//           </label>\n//           <input\n//             id=\"senderEmail\"\n//             type=\"email\"\n//             placeholder=\"your-email@example.com\"\n//             value={senderEmail}\n//             onChange={(e) => setSenderEmail(e.target.value)}\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//           />\n//         </div>\n//         <SearchForm onSearch={handleSearch} />\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 id=\"attachment\"\n//                 type=\"file\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n// export default App;\nimport React,{useState}from\"react\";import axios from\"axios\";import{useGoogleLogin,googleLogout}from\"@react-oauth/google\";import SearchForm from\"./components/SearchForm\";import ContactsTable from\"./components/ContactsTable\";import EmailSection from\"./components/EmailSection\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[contacts,setContacts]=useState([]);const[templates,setTemplates]=useState([]);const[role,setRole]=useState(\"\");const[country,setCountry]=useState(\"\");const[profile,setProfile]=useState(\"linkedin\");const[contactType,setContactType]=useState(\"gmail\");const[subject,setSubject]=useState(\"\");const[body,setBody]=useState(\"\");const[status,setStatus]=useState(\"\");const[attachmentFile,setAttachmentFile]=useState(null);const[senderEmail,setSenderEmail]=useState(\"\");// OAuth states\nconst[googleToken,setGoogleToken]=useState(null);const[userProfile,setUserProfile]=useState(null);const login=useGoogleLogin({onSuccess:async tokenResponse=>{try{setGoogleToken(tokenResponse.access_token);const resp=await axios.get(\"https://www.googleapis.com/oauth2/v3/userinfo\",{headers:{Authorization:\"Bearer \".concat(tokenResponse.access_token)}});setUserProfile(resp.data);setSenderEmail(resp.data.email);setStatus(\"\");// reset status on success\n}catch(e){console.error(\"Failed fetching user info:\",e);setStatus(\"Failed to get user info from Google.\");}},onError:error=>{console.error(\"Google Login Error:\",error);setStatus(\"Google login failed. Please try again.\");},scope:\"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",flow:\"implicit\"});const logout=()=>{googleLogout();setGoogleToken(null);setUserProfile(null);setSenderEmail(\"\");setStatus(\"\");};const handleSearch=async(role,country,profile,contactType)=>{setRole(role);setCountry(country);setProfile(profile);setContactType(contactType);try{// const resp = await axios.post(\"http://localhost:8000/api/search\", {\nconst resp=await axios.post(\"https://connectly-b-1.onrender.com/api/search\",{role,country,profile,contact_type:contactType});setContacts(resp.data.contacts);console.log(\"Contacts Found:\",resp.data.contacts);// const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\nconst tmpl=await axios.post(\"https://connectly-b-1.onrender.com/api/templates\");setTemplates(tmpl.data.templates);}catch(err){console.error(\"Error during search:\",err);setStatus(\"Failed to search contacts.\");}};const handleTemplateSelect=t=>{setSubject(t.subject.replace(\"{role}\",role).replace(\"{country}\",country));setBody(t.body.replace(\"{role}\",role).replace(\"{country}\",country));};const handleAttachmentChange=e=>{if(e.target.files.length>0){setAttachmentFile(e.target.files[0]);}else{setAttachmentFile(null);}};const handleSend=async()=>{if(contacts.length===0){setStatus(\"No contacts to send emails.\");return;}if(!googleToken){setStatus(\"Please log in with Google to send emails.\");return;}if(!senderEmail||senderEmail.trim()===\"\"){setStatus(\"Sender email address is required.\");return;}setStatus(\"Sending emails...\");const formData=new FormData();formData.append(\"emails\",contacts.join(\",\"));formData.append(\"subject\",subject);formData.append(\"body\",body);formData.append(\"sender_email\",senderEmail.trim());formData.append(\"gmail_token\",googleToken);if(attachmentFile){formData.append(\"attachment\",attachmentFile);}try{const resp=await axios.post(// \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n\"https://connectly-b-1.onrender.com/api/send_email_with_attachment_oauth\",formData,{headers:{\"Content-Type\":\"multipart/form-data\"}});setStatus(resp.data.message);}catch(error){console.error(\"Email sending error:\",error);setStatus(\"Error sending emails. Please try again.\");}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-bold mb-6 text-center text-indigo-700\",children:\"Agentic AI Bulk Outreach\"}),!googleToken?/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-6\",onClick:()=>login(),type:\"button\",children:\"Sign in with Google to Send Emails\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-6\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-green-800 font-bold mr-4\",children:[\"Signed in as \",userProfile===null||userProfile===void 0?void 0:userProfile.email]}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-red-600 hover:bg-red-700 text-white font-bold py-1 px-3 rounded text-sm\",onClick:logout,type:\"button\",children:\"Logout\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"senderEmail\",className:\"block font-semibold text-gray-700 mb-1\",children:\"Sender Email Address\"}),/*#__PURE__*/_jsx(\"input\",{id:\"senderEmail\",name:\"senderEmail\",type:\"email\",placeholder:\"your-email@example.com\",value:senderEmail,onChange:e=>setSenderEmail(e.target.value),className:\"w-full px-3 py-2 border border-gray-300 rounded\",autoComplete:\"email\"})]}),/*#__PURE__*/_jsx(SearchForm,{onSearch:handleSearch}),contacts.length>0&&/*#__PURE__*/_jsx(ContactsTable,{contacts:contacts,type:contactType}),templates.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(EmailSection,{templates:templates,onTemplateSelect:handleTemplateSelect,body:body,setBody:setBody,subject:subject,setSubject:setSubject,onSend:handleSend,status:status}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block mb-2 font-semibold text-gray-700\",htmlFor:\"attachment\",children:\"Attach a file (optional)\"}),/*#__PURE__*/_jsx(\"input\",{id:\"attachment\",type:\"file\",onChange:handleAttachmentChange,className:\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:text-sm file:font-semibold file:bg-indigo-50 file:text-indigo-700 hover:file:bg-indigo-100\"})]})]})]})});}export default App;","map":{"version":3,"names":["React","useState","axios","useGoogleLogin","googleLogout","SearchForm","ContactsTable","EmailSection","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","contacts","setContacts","templates","setTemplates","role","setRole","country","setCountry","profile","setProfile","contactType","setContactType","subject","setSubject","body","setBody","status","setStatus","attachmentFile","setAttachmentFile","senderEmail","setSenderEmail","googleToken","setGoogleToken","userProfile","setUserProfile","login","onSuccess","tokenResponse","access_token","resp","get","headers","Authorization","concat","data","email","e","console","error","onError","scope","flow","logout","handleSearch","post","contact_type","log","tmpl","err","handleTemplateSelect","t","replace","handleAttachmentChange","target","files","length","handleSend","trim","formData","FormData","append","join","message","className","children","onClick","type","htmlFor","id","name","placeholder","value","onChange","autoComplete","onSearch","onTemplateSelect","onSend"],"sources":["D:/PROJECTS/frontend/src/App.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role); setCountry(country); setProfile(profile); setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if(contacts.length === 0){\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\r\n//           Agentic AI Bulk Outreach\r\n//         </h1>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && (\r\n//           <ContactsTable contacts={contacts} type={contactType} />\r\n//         )}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n\r\n//             <div className=\"mt-6\">\r\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 id=\"attachment\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { GoogleOAuthProvider, googleLogout, useGoogleLogin } from '@react-oauth/google';\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// // Set this to your actual Google OAuth web client ID:\r\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com \";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//     // Google sign in\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async tokenResponse => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       // To display user info, fetch their profile:\r\n//       const resp = await axios.get(\r\n//         \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//         { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//       );\r\n//       setUserProfile(resp.data);\r\n//     },\r\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\", // or \"auth-code\" for backend exchange\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role); setCountry(country); setProfile(profile); setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please sign in with Google first.\");\r\n//       return;\r\n//     }\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"gmail_token\", googleToken); // <--- Pass the OAuth2 access token\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\r\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">\r\n//             Agentic AI Bulk Outreach\r\n//           </h1>\r\n\r\n//           {!googleToken ? (\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-primary mb-6\"\r\n//               onClick={() => login()}\r\n//             >\r\n//               Sign in with Google to Send Emails\r\n//             </button>\r\n//           ) : (\r\n//             <div className=\"flex items-center mb-6\">\r\n//               <span className=\"text-green-800 font-bold mr-4\">\r\n//                 Signed in as {userProfile?.email}\r\n//               </span>\r\n//               <button type=\"button\" className=\"btn btn-secondary\" onClick={logout}>\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           <SearchForm onSearch={handleSearch} />\r\n//           {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n//           {templates.length > 0 && (\r\n//             <>\r\n//               <EmailSection\r\n//                 templates={templates}\r\n//                 onTemplateSelect={handleTemplateSelect}\r\n//                 body={body}\r\n//                 setBody={setBody}\r\n//                 subject={subject}\r\n//                 setSubject={setSubject}\r\n//                 onSend={handleSend}\r\n//                 status={status}\r\n//               />\r\n//               <div className=\"mt-6\">\r\n//                 <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                   Attach a file (optional)\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"file\"\r\n//                   id=\"attachment\"\r\n//                   onChange={handleAttachmentChange}\r\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                             file:rounded file:border-0\r\n//                             file:text-sm file:font-semibold\r\n//                             file:bg-indigo-50 file:text-indigo-700\r\n//                             hover:file:bg-indigo-100\"\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { GoogleOAuthProvider, useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com\"; // Your real Google OAuth Web client ID\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n\r\n//   // Google OAuth2 states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async tokenResponse => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         // Fetch user info for display\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     scope:\r\n//       \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please sign in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"gmail_token\", googleToken); // Pass the OAuth2 access token\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\r\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\r\n//             Agentic AI Bulk Outreach\r\n//           </h1>\r\n\r\n//           {/* Google Auth: Show sign-in/sign-out status */}\r\n//           {!googleToken ? (\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-primary mb-6\"\r\n//               onClick={() => login()}\r\n//             >\r\n//               Sign in with Google to Send Emails\r\n//             </button>\r\n//           ) : (\r\n//             <div className=\"flex items-center mb-6\">\r\n//               <span className=\"text-green-800 font-bold mr-4\">\r\n//                 Signed in as {userProfile?.email}\r\n//               </span>\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"btn btn-secondary\"\r\n//                 onClick={logout}\r\n//               >\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           <SearchForm onSearch={handleSearch} />\r\n//           {contacts.length > 0 && (\r\n//             <ContactsTable contacts={contacts} type={contactType} />\r\n//           )}\r\n//           {templates.length > 0 && (\r\n//             <>\r\n//               <EmailSection\r\n//                 templates={templates}\r\n//                 onTemplateSelect={handleTemplateSelect}\r\n//                 body={body}\r\n//                 setBody={setBody}\r\n//                 subject={subject}\r\n//                 setSubject={setSubject}\r\n//                 onSend={handleSend}\r\n//                 status={status}\r\n//               />\r\n//               <div className=\"mt-6\">\r\n//                 <label\r\n//                   className=\"block mb-2 font-semibold text-gray-700\"\r\n//                   htmlFor=\"attachment\"\r\n//                 >\r\n//                   Attach a file (optional)\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"file\"\r\n//                   id=\"attachment\"\r\n//                   onChange={handleAttachmentChange}\r\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                              file:rounded file:border-0\r\n//                              file:text-sm file:font-semibold\r\n//                              file:bg-indigo-50 file:text-indigo-700\r\n//                              hover:file:bg-indigo-100\"\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n\r\n//   // Google OAuth2 states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async (tokenResponse) => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     scope:\r\n//       \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please sign in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"gmail_token\", googleToken);\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\r\n//           Agentic AI Bulk Outreach\r\n//         </h1>\r\n\r\n//         {!googleToken ? (\r\n//           <button\r\n//             type=\"button\"\r\n//             className=\"btn btn-primary mb-6\"\r\n//             onClick={() => login()}\r\n//           >\r\n//             Sign in with Google to Send Emails\r\n//           </button>\r\n//         ) : (\r\n//           <div className=\"flex items-center mb-6\">\r\n//             <span className=\"text-green-800 font-bold mr-4\">\r\n//               Signed in as {userProfile?.email}\r\n//             </span>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-secondary\"\r\n//               onClick={logout}\r\n//             >\r\n//               Logout\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n//         {contacts.length > 0 && (\r\n//           <ContactsTable contacts={contacts} type={contactType} />\r\n//         )}\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n//             <div className=\"mt-6\">\r\n//               <label\r\n//                 className=\"block mb-2 font-semibold text-gray-700\"\r\n//                 htmlFor=\"attachment\"\r\n//               >\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 id=\"attachment\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n\r\n//   // NEW: sender email state\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Please enter sender email address.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\"http://localhost:8000/api/send_email_with_attachment\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       });\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">Agentic AI Bulk Outreach</h1>\r\n\r\n//         {/* NEW: Input field for sender email */}\r\n//         <div className=\"mb-6\">\r\n//           <label htmlFor=\"senderEmail\" className=\"font-semibold text-gray-700 mb-1 block\">\r\n//             Your Email Address\r\n//           </label>\r\n//           <input\r\n//             id=\"senderEmail\"\r\n//             type=\"email\"\r\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//             placeholder=\"youremail@example.com\"\r\n//             value={senderEmail}\r\n//             onChange={(e) => setSenderEmail(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n//             <div className=\"mt-6\">\r\n//               <label\r\n//                 htmlFor=\"attachment\"\r\n//                 className=\"block mb-2 font-semibold text-gray-700\"\r\n//               >\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 id=\"attachment\"\r\n//                 type=\"file\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                   file:rounded file:border-0\r\n//                   file:text-sm file:font-semibold\r\n//                   file:bg-indigo-50 file:text-indigo-700\r\n//                   hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n\r\n//   // Added sender email state\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Please enter your email address.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\r\n//           Agentic AI Bulk Outreach\r\n//         </h1>\r\n\r\n//         {/* NEW sender email input */}\r\n//         <div className=\"mb-6\">\r\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n//             Your Email Address \r\n//           </label>\r\n//           <input\r\n//             id=\"senderEmail\"\r\n//             type=\"email\"\r\n//             placeholder=\"youremail@example.com\"\r\n//             value={senderEmail}\r\n//             onChange={(e) => setSenderEmail(e.target.value)}\r\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//           />\r\n//         </div>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n\r\n//             <div className=\"mt-6\">\r\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 id=\"attachment\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { GoogleOAuthProvider, useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// const CLIENT_ID = \"552274412896-2r5qc6oqsvgje1btr033i6u7uh1q0lpm.apps.googleusercontent.com\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   // OAuth states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async (tokenResponse) => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         // Fetch user profile info to display\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     setSenderEmail(\"\");\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please log in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Sender email address is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\r\n\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\r\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\r\n\r\n//           {!googleToken ? (\r\n//             <button className=\"btn btn-primary mb-6\" onClick={() => login()}>\r\n//               Sign in with Google to Send Emails\r\n//             </button>\r\n//           ) : (\r\n//             <div className=\"flex items-center mb-6\">\r\n//               <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\r\n//               <button className=\"btn btn-secondary\" onClick={logout}>\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Sender Email input can be edited if needed */}\r\n//           <div className=\"mb-6\">\r\n//             <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n//               Sender Email Address\r\n//             </label>\r\n//             <input\r\n//               id=\"senderEmail\"\r\n//               type=\"email\"\r\n//               placeholder=\"your-email@example.com\"\r\n//               value={senderEmail}\r\n//               onChange={(e) => setSenderEmail(e.target.value)}\r\n//               className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//             />\r\n//           </div>\r\n\r\n//           <SearchForm onSearch={handleSearch} />\r\n\r\n//           {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//           {templates.length > 0 && (\r\n//             <>\r\n//               <EmailSection\r\n//                 templates={templates}\r\n//                 onTemplateSelect={handleTemplateSelect}\r\n//                 body={body}\r\n//                 setBody={setBody}\r\n//                 subject={subject}\r\n//                 setSubject={setSubject}\r\n//                 onSend={handleSend}\r\n//                 status={status}\r\n//               />\r\n//               <div className=\"mt-6\">\r\n//                 <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                   Attach a file (optional)\r\n//                 </label>\r\n//                 <input\r\n//                   id=\"attachment\"\r\n//                   type=\"file\"\r\n//                   onChange={handleAttachmentChange}\r\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                              file:rounded file:border-0\r\n//                              file:text-sm file:font-semibold\r\n//                              file:bg-indigo-50 file:text-indigo-700\r\n//                              hover:file:bg-indigo-100\"\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   // OAuth states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async (tokenResponse) => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         // Fetch user profile info to display\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     setSenderEmail(\"\");\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please log in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Sender email address is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\r\n\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\r\n\r\n//         {!googleToken ? (\r\n//           <button className=\"btn btn-primary mb-6\" onClick={() => login()}>\r\n//             Sign in with Google to Send Emails\r\n//           </button>\r\n//         ) : (\r\n//           <div className=\"flex items-center mb-6\">\r\n//             <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\r\n//             <button className=\"btn btn-secondary\" onClick={logout}>\r\n//               Logout\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Sender Email input can be edited if needed */}\r\n//         <div className=\"mb-6\">\r\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n//             Sender Email Address\r\n//           </label>\r\n//           <input\r\n//             id=\"senderEmail\"\r\n//             type=\"email\"\r\n//             placeholder=\"your-email@example.com\"\r\n//             value={senderEmail}\r\n//             onChange={(e) => setSenderEmail(e.target.value)}\r\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//           />\r\n//         </div>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n//             <div className=\"mt-6\">\r\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 id=\"attachment\"\r\n//                 type=\"file\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   // OAuth states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async (tokenResponse) => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         // Fetch user profile info to display\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     onError: (error) => {\r\n//       console.error(\"Google Login Error:\", error);\r\n//       setStatus(\"Google login failed. Please try again.\");\r\n//     },\r\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     setSenderEmail(\"\");\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please log in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Sender email address is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\r\n\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\r\n\r\n//         {!googleToken ? (\r\n//           <button \r\n//             className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-6\"\r\n//             onClick={() => login()}\r\n//           >\r\n//             Sign in with Google to Send Emails\r\n//           </button>\r\n//         ) : (\r\n//           <div className=\"flex items-center mb-6\">\r\n//             <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\r\n//             <button \r\n//               className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-3 rounded text-sm\"\r\n//               onClick={logout}\r\n//             >\r\n//               Logout\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Sender Email input can be edited if needed */}\r\n//         <div className=\"mb-6\">\r\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n//             Sender Email Address\r\n//           </label>\r\n//           <input\r\n//             id=\"senderEmail\"\r\n//             type=\"email\"\r\n//             placeholder=\"your-email@example.com\"\r\n//             value={senderEmail}\r\n//             onChange={(e) => setSenderEmail(e.target.value)}\r\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//           />\r\n//         </div>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n//             <div className=\"mt-6\">\r\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 id=\"attachment\"\r\n//                 type=\"file\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport ContactsTable from \"./components/ContactsTable\";\r\nimport EmailSection from \"./components/EmailSection\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [templates, setTemplates] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [profile, setProfile] = useState(\"linkedin\");\r\n  const [contactType, setContactType] = useState(\"gmail\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [attachmentFile, setAttachmentFile] = useState(null);\r\n  const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n  // OAuth states\r\n  const [googleToken, setGoogleToken] = useState(null);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n\r\n  const login = useGoogleLogin({\r\n    onSuccess: async (tokenResponse) => {\r\n      try {\r\n        setGoogleToken(tokenResponse.access_token);\r\n        const resp = await axios.get(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\r\n          headers: {\r\n            Authorization: `Bearer ${tokenResponse.access_token}`,\r\n          },\r\n        });\r\n        setUserProfile(resp.data);\r\n        setSenderEmail(resp.data.email);\r\n        setStatus(\"\"); // reset status on success\r\n      } catch (e) {\r\n        console.error(\"Failed fetching user info:\", e);\r\n        setStatus(\"Failed to get user info from Google.\");\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Google Login Error:\", error);\r\n      setStatus(\"Google login failed. Please try again.\");\r\n    },\r\n    scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n    flow: \"implicit\",\r\n  });\r\n\r\n  const logout = () => {\r\n    googleLogout();\r\n    setGoogleToken(null);\r\n    setUserProfile(null);\r\n    setSenderEmail(\"\");\r\n    setStatus(\"\");\r\n  };\r\n\r\n  const handleSearch = async (role, country, profile, contactType) => {\r\n    setRole(role);\r\n    setCountry(country);\r\n    setProfile(profile);\r\n    setContactType(contactType);\r\n\r\n    try {\r\n      // const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n      const resp = await axios.post(\"https://connectly-b-1.onrender.com/api/search\", {\r\n        role,\r\n        country,\r\n        profile,\r\n        contact_type: contactType,\r\n      });\r\n      setContacts(resp.data.contacts);\r\n      console.log(\"Contacts Found:\", resp.data.contacts);\r\n\r\n      // const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n      const tmpl = await axios.post(\"https://connectly-b-1.onrender.com/api/templates\");\r\n      setTemplates(tmpl.data.templates);\r\n    } catch (err) {\r\n      console.error(\"Error during search:\", err);\r\n      setStatus(\"Failed to search contacts.\");\r\n    }\r\n  };\r\n\r\n  const handleTemplateSelect = (t) => {\r\n    setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n    setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n  };\r\n\r\n  const handleAttachmentChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      setAttachmentFile(e.target.files[0]);\r\n    } else {\r\n      setAttachmentFile(null);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (contacts.length === 0) {\r\n      setStatus(\"No contacts to send emails.\");\r\n      return;\r\n    }\r\n    if (!googleToken) {\r\n      setStatus(\"Please log in with Google to send emails.\");\r\n      return;\r\n    }\r\n    if (!senderEmail || senderEmail.trim() === \"\") {\r\n      setStatus(\"Sender email address is required.\");\r\n      return;\r\n    }\r\n    setStatus(\"Sending emails...\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"emails\", contacts.join(\",\"));\r\n    formData.append(\"subject\", subject);\r\n    formData.append(\"body\", body);\r\n    formData.append(\"sender_email\", senderEmail.trim());\r\n    formData.append(\"gmail_token\", googleToken);\r\n    if (attachmentFile) {\r\n      formData.append(\"attachment\", attachmentFile);\r\n    }\r\n\r\n    try {\r\n      const resp = await axios.post(\r\n        // \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n        \"https://connectly-b-1.onrender.com/api/send_email_with_attachment_oauth\",\r\n        formData,\r\n        {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        }\r\n      );\r\n      setStatus(resp.data.message);\r\n    } catch (error) {\r\n      console.error(\"Email sending error:\", error);\r\n      setStatus(\"Error sending emails. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n      <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n        <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\r\n\r\n        {!googleToken ? (\r\n          <button\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-6\"\r\n            onClick={() => login()}\r\n            type=\"button\"\r\n          >\r\n            Sign in with Google to Send Emails\r\n          </button>\r\n        ) : (\r\n          <div className=\"flex items-center mb-6\">\r\n            <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\r\n            <button\r\n              className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-1 px-3 rounded text-sm\"\r\n              onClick={logout}\r\n              type=\"button\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n            Sender Email Address\r\n          </label>\r\n          <input\r\n            id=\"senderEmail\"\r\n            name=\"senderEmail\"\r\n            type=\"email\"\r\n            placeholder=\"your-email@example.com\"\r\n            value={senderEmail}\r\n            onChange={(e) => setSenderEmail(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n            autoComplete=\"email\"\r\n          />\r\n        </div>\r\n\r\n        <SearchForm onSearch={handleSearch} />\r\n\r\n        {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n        {templates.length > 0 && (\r\n          <>\r\n            <EmailSection\r\n              templates={templates}\r\n              onTemplateSelect={handleTemplateSelect}\r\n              body={body}\r\n              setBody={setBody}\r\n              subject={subject}\r\n              setSubject={setSubject}\r\n              onSend={handleSend}\r\n              status={status}\r\n            />\r\n            <div className=\"mt-6\">\r\n              <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n                Attach a file (optional)\r\n              </label>\r\n              <input\r\n                id=\"attachment\"\r\n                type=\"file\"\r\n                onChange={handleAttachmentChange}\r\n                className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded file:border-0 file:text-sm file:font-semibold file:bg-indigo-50 file:text-indigo-700 hover:file:bg-indigo-100\"\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}