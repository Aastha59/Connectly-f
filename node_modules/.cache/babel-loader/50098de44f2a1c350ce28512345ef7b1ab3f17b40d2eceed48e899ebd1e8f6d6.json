{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\Connectly-AI\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role); setCountry(country); setProfile(profile); setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n\n//   const handleSend = async () => {\n//     if(contacts.length === 0){\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\n//           Agentic AI Bulk Outreach\n//         </h1>\n\n//         <SearchForm onSearch={handleSearch} />\n\n//         {contacts.length > 0 && (\n//           <ContactsTable contacts={contacts} type={contactType} />\n//         )}\n\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n\n//             <div className=\"mt-6\">\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 type=\"file\"\n//                 id=\"attachment\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { GoogleOAuthProvider, googleLogout, useGoogleLogin } from '@react-oauth/google';\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n\n// // Set this to your actual Google OAuth web client ID:\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com \";\n\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n\n//     // Google sign in\n//   const login = useGoogleLogin({\n//     onSuccess: async tokenResponse => {\n//       setGoogleToken(tokenResponse.access_token);\n//       // To display user info, fetch their profile:\n//       const resp = await axios.get(\n//         \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//         { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//       );\n//       setUserProfile(resp.data);\n//     },\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\", // or \"auth-code\" for backend exchange\n//   });\n\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     googleLogout();\n//   };\n\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role); setCountry(country); setProfile(profile); setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n\n//   const handleSend = async () => {\n//     if (!googleToken) {\n//       setStatus(\"Please sign in with Google first.\");\n//       return;\n//     }\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"gmail_token\", googleToken); // <--- Pass the OAuth2 access token\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">\n//             Agentic AI Bulk Outreach\n//           </h1>\n\n//           {!googleToken ? (\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-primary mb-6\"\n//               onClick={() => login()}\n//             >\n//               Sign in with Google to Send Emails\n//             </button>\n//           ) : (\n//             <div className=\"flex items-center mb-6\">\n//               <span className=\"text-green-800 font-bold mr-4\">\n//                 Signed in as {userProfile?.email}\n//               </span>\n//               <button type=\"button\" className=\"btn btn-secondary\" onClick={logout}>\n//                 Logout\n//               </button>\n//             </div>\n//           )}\n\n//           <SearchForm onSearch={handleSearch} />\n//           {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n//           {templates.length > 0 && (\n//             <>\n//               <EmailSection\n//                 templates={templates}\n//                 onTemplateSelect={handleTemplateSelect}\n//                 body={body}\n//                 setBody={setBody}\n//                 subject={subject}\n//                 setSubject={setSubject}\n//                 onSend={handleSend}\n//                 status={status}\n//               />\n//               <div className=\"mt-6\">\n//                 <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                   Attach a file (optional)\n//                 </label>\n//                 <input\n//                   type=\"file\"\n//                   id=\"attachment\"\n//                   onChange={handleAttachmentChange}\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                             file:rounded file:border-0\n//                             file:text-sm file:font-semibold\n//                             file:bg-indigo-50 file:text-indigo-700\n//                             hover:file:bg-indigo-100\"\n//                 />\n//               </div>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { GoogleOAuthProvider, useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com\"; // Your real Google OAuth Web client ID\n\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n\n//   // Google OAuth2 states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n\n//   const login = useGoogleLogin({\n//     onSuccess: async tokenResponse => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         // Fetch user info for display\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     scope:\n//       \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\",\n//   });\n\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     googleLogout();\n//   };\n\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!googleToken) {\n//       setStatus(\"Please sign in with Google to send emails.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"gmail_token\", googleToken); // Pass the OAuth2 access token\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\n//             Agentic AI Bulk Outreach\n//           </h1>\n\n//           {/* Google Auth: Show sign-in/sign-out status */}\n//           {!googleToken ? (\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-primary mb-6\"\n//               onClick={() => login()}\n//             >\n//               Sign in with Google to Send Emails\n//             </button>\n//           ) : (\n//             <div className=\"flex items-center mb-6\">\n//               <span className=\"text-green-800 font-bold mr-4\">\n//                 Signed in as {userProfile?.email}\n//               </span>\n//               <button\n//                 type=\"button\"\n//                 className=\"btn btn-secondary\"\n//                 onClick={logout}\n//               >\n//                 Logout\n//               </button>\n//             </div>\n//           )}\n\n//           <SearchForm onSearch={handleSearch} />\n//           {contacts.length > 0 && (\n//             <ContactsTable contacts={contacts} type={contactType} />\n//           )}\n//           {templates.length > 0 && (\n//             <>\n//               <EmailSection\n//                 templates={templates}\n//                 onTemplateSelect={handleTemplateSelect}\n//                 body={body}\n//                 setBody={setBody}\n//                 subject={subject}\n//                 setSubject={setSubject}\n//                 onSend={handleSend}\n//                 status={status}\n//               />\n//               <div className=\"mt-6\">\n//                 <label\n//                   className=\"block mb-2 font-semibold text-gray-700\"\n//                   htmlFor=\"attachment\"\n//                 >\n//                   Attach a file (optional)\n//                 </label>\n//                 <input\n//                   type=\"file\"\n//                   id=\"attachment\"\n//                   onChange={handleAttachmentChange}\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                              file:rounded file:border-0\n//                              file:text-sm file:font-semibold\n//                              file:bg-indigo-50 file:text-indigo-700\n//                              hover:file:bg-indigo-100\"\n//                 />\n//               </div>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com\";\n\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n\n//   // Google OAuth2 states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n\n//   const login = useGoogleLogin({\n//     onSuccess: async (tokenResponse) => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     scope:\n//       \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\",\n//   });\n\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     googleLogout();\n//   };\n\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n//     if (!googleToken) {\n//       setStatus(\"Please sign in with Google to send emails.\");\n//       return;\n//     }\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"gmail_token\", googleToken);\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\n//           Agentic AI Bulk Outreach\n//         </h1>\n\n//         {!googleToken ? (\n//           <button\n//             type=\"button\"\n//             className=\"btn btn-primary mb-6\"\n//             onClick={() => login()}\n//           >\n//             Sign in with Google to Send Emails\n//           </button>\n//         ) : (\n//           <div className=\"flex items-center mb-6\">\n//             <span className=\"text-green-800 font-bold mr-4\">\n//               Signed in as {userProfile?.email}\n//             </span>\n//             <button\n//               type=\"button\"\n//               className=\"btn btn-secondary\"\n//               onClick={logout}\n//             >\n//               Logout\n//             </button>\n//           </div>\n//         )}\n\n//         <SearchForm onSearch={handleSearch} />\n//         {contacts.length > 0 && (\n//           <ContactsTable contacts={contacts} type={contactType} />\n//         )}\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label\n//                 className=\"block mb-2 font-semibold text-gray-700\"\n//                 htmlFor=\"attachment\"\n//               >\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 type=\"file\"\n//                 id=\"attachment\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n\n//   // NEW: sender email state\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Please enter sender email address.\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n\n//     try {\n//       const resp = await axios.post(\"http://localhost:8000/api/send_email_with_attachment\", formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">Agentic AI Bulk Outreach</h1>\n\n//         {/* NEW: Input field for sender email */}\n//         <div className=\"mb-6\">\n//           <label htmlFor=\"senderEmail\" className=\"font-semibold text-gray-700 mb-1 block\">\n//             Your Email Address\n//           </label>\n//           <input\n//             id=\"senderEmail\"\n//             type=\"email\"\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//             placeholder=\"youremail@example.com\"\n//             value={senderEmail}\n//             onChange={(e) => setSenderEmail(e.target.value)}\n//           />\n//         </div>\n\n//         <SearchForm onSearch={handleSearch} />\n\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label\n//                 htmlFor=\"attachment\"\n//                 className=\"block mb-2 font-semibold text-gray-700\"\n//               >\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 id=\"attachment\"\n//                 type=\"file\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                   file:rounded file:border-0\n//                   file:text-sm file:font-semibold\n//                   file:bg-indigo-50 file:text-indigo-700\n//                   hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n\n//   // Added sender email state\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Please enter your email address.\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\n//           Agentic AI Bulk Outreach\n//         </h1>\n\n//         {/* NEW sender email input */}\n//         <div className=\"mb-6\">\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\n//             Your Email Address \n//           </label>\n//           <input\n//             id=\"senderEmail\"\n//             type=\"email\"\n//             placeholder=\"youremail@example.com\"\n//             value={senderEmail}\n//             onChange={(e) => setSenderEmail(e.target.value)}\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//           />\n//         </div>\n\n//         <SearchForm onSearch={handleSearch} />\n\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n\n//             <div className=\"mt-6\">\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 type=\"file\"\n//                 id=\"attachment\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { GoogleOAuthProvider, useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n\n// const CLIENT_ID = \"552274412896-2r5qc6oqsvgje1btr033i6u7uh1q0lpm.apps.googleusercontent.com\";\n\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n\n//   // OAuth states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n\n//   const login = useGoogleLogin({\n//     onSuccess: async (tokenResponse) => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         // Fetch user profile info to display\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\",\n//   });\n\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     setSenderEmail(\"\");\n//     googleLogout();\n//   };\n\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n\n//     if (!googleToken) {\n//       setStatus(\"Please log in with Google to send emails.\");\n//       return;\n//     }\n\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Sender email address is required.\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\n\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\n\n//           {!googleToken ? (\n//             <button className=\"btn btn-primary mb-6\" onClick={() => login()}>\n//               Sign in with Google to Send Emails\n//             </button>\n//           ) : (\n//             <div className=\"flex items-center mb-6\">\n//               <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\n//               <button className=\"btn btn-secondary\" onClick={logout}>\n//                 Logout\n//               </button>\n//             </div>\n//           )}\n\n//           {/* Sender Email input can be edited if needed */}\n//           <div className=\"mb-6\">\n//             <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\n//               Sender Email Address\n//             </label>\n//             <input\n//               id=\"senderEmail\"\n//               type=\"email\"\n//               placeholder=\"your-email@example.com\"\n//               value={senderEmail}\n//               onChange={(e) => setSenderEmail(e.target.value)}\n//               className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//             />\n//           </div>\n\n//           <SearchForm onSearch={handleSearch} />\n\n//           {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n\n//           {templates.length > 0 && (\n//             <>\n//               <EmailSection\n//                 templates={templates}\n//                 onTemplateSelect={handleTemplateSelect}\n//                 body={body}\n//                 setBody={setBody}\n//                 subject={subject}\n//                 setSubject={setSubject}\n//                 onSend={handleSend}\n//                 status={status}\n//               />\n//               <div className=\"mt-6\">\n//                 <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                   Attach a file (optional)\n//                 </label>\n//                 <input\n//                   id=\"attachment\"\n//                   type=\"file\"\n//                   onChange={handleAttachmentChange}\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                              file:rounded file:border-0\n//                              file:text-sm file:font-semibold\n//                              file:bg-indigo-50 file:text-indigo-700\n//                              hover:file:bg-indigo-100\"\n//                 />\n//               </div>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </GoogleOAuthProvider>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\n// import SearchForm from \"./components/SearchForm\";\n// import ContactsTable from \"./components/ContactsTable\";\n// import EmailSection from \"./components/EmailSection\";\n\n// function App() {\n//   const [contacts, setContacts] = useState([]);\n//   const [templates, setTemplates] = useState([]);\n//   const [role, setRole] = useState(\"\");\n//   const [country, setCountry] = useState(\"\");\n//   const [profile, setProfile] = useState(\"linkedin\");\n//   const [contactType, setContactType] = useState(\"gmail\");\n//   const [subject, setSubject] = useState(\"\");\n//   const [body, setBody] = useState(\"\");\n//   const [status, setStatus] = useState(\"\");\n//   const [attachmentFile, setAttachmentFile] = useState(null);\n//   const [senderEmail, setSenderEmail] = useState(\"\");\n\n//   // OAuth states\n//   const [googleToken, setGoogleToken] = useState(null);\n//   const [userProfile, setUserProfile] = useState(null);\n\n//   const login = useGoogleLogin({\n//     onSuccess: async (tokenResponse) => {\n//       setGoogleToken(tokenResponse.access_token);\n//       try {\n//         // Fetch user profile info to display\n//         const resp = await axios.get(\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\n//         );\n//         setUserProfile(resp.data);\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\n//       } catch (e) {\n//         console.error(\"Failed fetching user info\", e);\n//       }\n//     },\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\n//     flow: \"implicit\",\n//   });\n\n//   const logout = () => {\n//     setGoogleToken(null);\n//     setUserProfile(null);\n//     setSenderEmail(\"\");\n//     googleLogout();\n//   };\n\n//   const handleSearch = async (role, country, profile, contactType) => {\n//     setRole(role);\n//     setCountry(country);\n//     setProfile(profile);\n//     setContactType(contactType);\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\n//       role,\n//       country,\n//       profile,\n//       contact_type: contactType,\n//     });\n//     setContacts(resp.data.contacts);\n//     console.log(\"Contacts Found:\", resp.data.contacts);\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n//     setTemplates(tmpl.data.templates);\n//   };\n\n//   const handleTemplateSelect = (t) => {\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n//   };\n\n//   const handleAttachmentChange = (e) => {\n//     if (e.target.files.length > 0) {\n//       setAttachmentFile(e.target.files[0]);\n//     } else {\n//       setAttachmentFile(null);\n//     }\n//   };\n\n//   const handleSend = async () => {\n//     if (contacts.length === 0) {\n//       setStatus(\"No contacts to send emails.\");\n//       return;\n//     }\n\n//     if (!googleToken) {\n//       setStatus(\"Please log in with Google to send emails.\");\n//       return;\n//     }\n\n//     if (!senderEmail || senderEmail.trim() === \"\") {\n//       setStatus(\"Sender email address is required.\");\n//       return;\n//     }\n\n//     const formData = new FormData();\n//     formData.append(\"emails\", contacts.join(\",\"));\n//     formData.append(\"subject\", subject);\n//     formData.append(\"body\", body);\n//     formData.append(\"sender_email\", senderEmail.trim());\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\n\n//     if (attachmentFile) {\n//       formData.append(\"attachment\", attachmentFile);\n//     }\n\n//     try {\n//       const resp = await axios.post(\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       setStatus(resp.data.message);\n//     } catch (error) {\n//       setStatus(\"Error sending emails.\");\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\n\n//         {!googleToken ? (\n//           <button className=\"btn btn-primary mb-6\" onClick={() => login()}>\n//             Sign in with Google to Send Emails\n//           </button>\n//         ) : (\n//           <div className=\"flex items-center mb-6\">\n//             <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\n//             <button className=\"btn btn-secondary\" onClick={logout}>\n//               Logout\n//             </button>\n//           </div>\n//         )}\n\n//         {/* Sender Email input can be edited if needed */}\n//         <div className=\"mb-6\">\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\n//             Sender Email Address\n//           </label>\n//           <input\n//             id=\"senderEmail\"\n//             type=\"email\"\n//             placeholder=\"your-email@example.com\"\n//             value={senderEmail}\n//             onChange={(e) => setSenderEmail(e.target.value)}\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\n//           />\n//         </div>\n\n//         <SearchForm onSearch={handleSearch} />\n\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\n\n//         {templates.length > 0 && (\n//           <>\n//             <EmailSection\n//               templates={templates}\n//               onTemplateSelect={handleTemplateSelect}\n//               body={body}\n//               setBody={setBody}\n//               subject={subject}\n//               setSubject={setSubject}\n//               onSend={handleSend}\n//               status={status}\n//             />\n//             <div className=\"mt-6\">\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\n//                 Attach a file (optional)\n//               </label>\n//               <input\n//                 id=\"attachment\"\n//                 type=\"file\"\n//                 onChange={handleAttachmentChange}\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\n//                            file:rounded file:border-0\n//                            file:text-sm file:font-semibold\n//                            file:bg-indigo-50 file:text-indigo-700\n//                            hover:file:bg-indigo-100\"\n//               />\n//             </div>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\nimport SearchForm from \"./components/SearchForm\";\nimport ContactsTable from \"./components/ContactsTable\";\nimport EmailSection from \"./components/EmailSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  const [role, setRole] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [profile, setProfile] = useState(\"linkedin\");\n  const [contactType, setContactType] = useState(\"gmail\");\n  const [subject, setSubject] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [attachmentFile, setAttachmentFile] = useState(null);\n  const [senderEmail, setSenderEmail] = useState(\"\");\n\n  // OAuth states\n  const [googleToken, setGoogleToken] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const login = useGoogleLogin({\n    onSuccess: async tokenResponse => {\n      setGoogleToken(tokenResponse.access_token);\n      try {\n        // Fetch user profile info to display\n        const resp = await axios.get(\"https://www.googleapis.com/oauth2/v3/userinfo\", {\n          headers: {\n            Authorization: `Bearer ${tokenResponse.access_token}`\n          }\n        });\n        setUserProfile(resp.data);\n        setSenderEmail(resp.data.email); // Set sender email automatically from Google profile\n      } catch (e) {\n        console.error(\"Failed fetching user info\", e);\n      }\n    },\n    onError: error => {\n      console.error(\"Google Login Error:\", error);\n      setStatus(\"Google login failed. Please try again.\");\n    },\n    scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\"\n  });\n  const logout = () => {\n    setGoogleToken(null);\n    setUserProfile(null);\n    setSenderEmail(\"\");\n    googleLogout();\n  };\n  const handleSearch = async (role, country, profile, contactType) => {\n    setRole(role);\n    setCountry(country);\n    setProfile(profile);\n    setContactType(contactType);\n    const resp = await axios.post(\"http://localhost:8000/api/search\", {\n      role,\n      country,\n      profile,\n      contact_type: contactType\n    });\n    setContacts(resp.data.contacts);\n    console.log(\"Contacts Found:\", resp.data.contacts);\n    const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\n    setTemplates(tmpl.data.templates);\n  };\n  const handleTemplateSelect = t => {\n    setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\n    setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\n  };\n  const handleAttachmentChange = e => {\n    if (e.target.files.length > 0) {\n      setAttachmentFile(e.target.files[0]);\n    } else {\n      setAttachmentFile(null);\n    }\n  };\n  const handleSend = async () => {\n    if (contacts.length === 0) {\n      setStatus(\"No contacts to send emails.\");\n      return;\n    }\n    if (!googleToken) {\n      setStatus(\"Please log in with Google to send emails.\");\n      return;\n    }\n    if (!senderEmail || senderEmail.trim() === \"\") {\n      setStatus(\"Sender email address is required.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"emails\", contacts.join(\",\"));\n    formData.append(\"subject\", subject);\n    formData.append(\"body\", body);\n    formData.append(\"sender_email\", senderEmail.trim());\n    formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\n\n    if (attachmentFile) {\n      formData.append(\"attachment\", attachmentFile);\n    }\n    try {\n      const resp = await axios.post(\"http://localhost:8000/api/send_email_with_attachment_oauth\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setStatus(resp.data.message);\n    } catch (error) {\n      setStatus(\"Error sending emails.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold mb-6 text-center text-indigo-700\",\n        children: \"Agentic AI Bulk Outreach\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1560,\n        columnNumber: 9\n      }, this), !googleToken ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-6\",\n        onClick: () => login(),\n        children: \"Sign in with Google to Send Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-800 font-bold mr-4\",\n          children: [\"Signed in as \", userProfile === null || userProfile === void 0 ? void 0 : userProfile.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1571,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-3 rounded text-sm\",\n          onClick: logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1572,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1570,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"senderEmail\",\n          className: \"block font-semibold text-gray-700 mb-1\",\n          children: \"Sender Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"senderEmail\",\n          type: \"email\",\n          placeholder: \"your-email@example.com\",\n          value: senderEmail,\n          onChange: e => setSenderEmail(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1586,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1596,\n        columnNumber: 9\n      }, this), contacts.length > 0 && /*#__PURE__*/_jsxDEV(ContactsTable, {\n        contacts: contacts,\n        type: contactType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1598,\n        columnNumber: 33\n      }, this), templates.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EmailSection, {\n          templates: templates,\n          onTemplateSelect: handleTemplateSelect,\n          body: body,\n          setBody: setBody,\n          subject: subject,\n          setSubject: setSubject,\n          onSend: handleSend,\n          status: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1602,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2 font-semibold text-gray-700\",\n            htmlFor: \"attachment\",\n            children: \"Attach a file (optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1613,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"attachment\",\n            type: \"file\",\n            onChange: handleAttachmentChange,\n            className: \"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\\r file:rounded file:border-0\\r file:text-sm file:font-semibold\\r file:bg-indigo-50 file:text-indigo-700\\r hover:file:bg-indigo-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1616,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1612,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1559,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1558,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eFgwF9AfjG85pR703VGbSCqHcGo=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","useGoogleLogin","googleLogout","SearchForm","ContactsTable","EmailSection","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","contacts","setContacts","templates","setTemplates","role","setRole","country","setCountry","profile","setProfile","contactType","setContactType","subject","setSubject","body","setBody","status","setStatus","attachmentFile","setAttachmentFile","senderEmail","setSenderEmail","googleToken","setGoogleToken","userProfile","setUserProfile","login","onSuccess","tokenResponse","access_token","resp","get","headers","Authorization","data","email","e","console","error","onError","scope","logout","handleSearch","post","contact_type","log","tmpl","handleTemplateSelect","t","replace","handleAttachmentChange","target","files","length","handleSend","trim","formData","FormData","append","join","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","id","type","placeholder","value","onChange","onSearch","onTemplateSelect","onSend","_c","$RefreshReg$"],"sources":["D:/PROJECTS/Connectly-AI/frontend/src/App.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role); setCountry(country); setProfile(profile); setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if(contacts.length === 0){\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\r\n//           Agentic AI Bulk Outreach\r\n//         </h1>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && (\r\n//           <ContactsTable contacts={contacts} type={contactType} />\r\n//         )}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n\r\n//             <div className=\"mt-6\">\r\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 id=\"attachment\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { GoogleOAuthProvider, googleLogout, useGoogleLogin } from '@react-oauth/google';\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// // Set this to your actual Google OAuth web client ID:\r\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com \";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//     // Google sign in\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async tokenResponse => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       // To display user info, fetch their profile:\r\n//       const resp = await axios.get(\r\n//         \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//         { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//       );\r\n//       setUserProfile(resp.data);\r\n//     },\r\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\", // or \"auth-code\" for backend exchange\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role); setCountry(country); setProfile(profile); setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please sign in with Google first.\");\r\n//       return;\r\n//     }\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"gmail_token\", googleToken); // <--- Pass the OAuth2 access token\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\r\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">\r\n//             Agentic AI Bulk Outreach\r\n//           </h1>\r\n\r\n//           {!googleToken ? (\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-primary mb-6\"\r\n//               onClick={() => login()}\r\n//             >\r\n//               Sign in with Google to Send Emails\r\n//             </button>\r\n//           ) : (\r\n//             <div className=\"flex items-center mb-6\">\r\n//               <span className=\"text-green-800 font-bold mr-4\">\r\n//                 Signed in as {userProfile?.email}\r\n//               </span>\r\n//               <button type=\"button\" className=\"btn btn-secondary\" onClick={logout}>\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           <SearchForm onSearch={handleSearch} />\r\n//           {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n//           {templates.length > 0 && (\r\n//             <>\r\n//               <EmailSection\r\n//                 templates={templates}\r\n//                 onTemplateSelect={handleTemplateSelect}\r\n//                 body={body}\r\n//                 setBody={setBody}\r\n//                 subject={subject}\r\n//                 setSubject={setSubject}\r\n//                 onSend={handleSend}\r\n//                 status={status}\r\n//               />\r\n//               <div className=\"mt-6\">\r\n//                 <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                   Attach a file (optional)\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"file\"\r\n//                   id=\"attachment\"\r\n//                   onChange={handleAttachmentChange}\r\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                             file:rounded file:border-0\r\n//                             file:text-sm file:font-semibold\r\n//                             file:bg-indigo-50 file:text-indigo-700\r\n//                             hover:file:bg-indigo-100\"\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { GoogleOAuthProvider, useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com\"; // Your real Google OAuth Web client ID\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n\r\n//   // Google OAuth2 states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async tokenResponse => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         // Fetch user info for display\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     scope:\r\n//       \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please sign in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"gmail_token\", googleToken); // Pass the OAuth2 access token\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\r\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\r\n//             Agentic AI Bulk Outreach\r\n//           </h1>\r\n\r\n//           {/* Google Auth: Show sign-in/sign-out status */}\r\n//           {!googleToken ? (\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-primary mb-6\"\r\n//               onClick={() => login()}\r\n//             >\r\n//               Sign in with Google to Send Emails\r\n//             </button>\r\n//           ) : (\r\n//             <div className=\"flex items-center mb-6\">\r\n//               <span className=\"text-green-800 font-bold mr-4\">\r\n//                 Signed in as {userProfile?.email}\r\n//               </span>\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"btn btn-secondary\"\r\n//                 onClick={logout}\r\n//               >\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           <SearchForm onSearch={handleSearch} />\r\n//           {contacts.length > 0 && (\r\n//             <ContactsTable contacts={contacts} type={contactType} />\r\n//           )}\r\n//           {templates.length > 0 && (\r\n//             <>\r\n//               <EmailSection\r\n//                 templates={templates}\r\n//                 onTemplateSelect={handleTemplateSelect}\r\n//                 body={body}\r\n//                 setBody={setBody}\r\n//                 subject={subject}\r\n//                 setSubject={setSubject}\r\n//                 onSend={handleSend}\r\n//                 status={status}\r\n//               />\r\n//               <div className=\"mt-6\">\r\n//                 <label\r\n//                   className=\"block mb-2 font-semibold text-gray-700\"\r\n//                   htmlFor=\"attachment\"\r\n//                 >\r\n//                   Attach a file (optional)\r\n//                 </label>\r\n//                 <input\r\n//                   type=\"file\"\r\n//                   id=\"attachment\"\r\n//                   onChange={handleAttachmentChange}\r\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                              file:rounded file:border-0\r\n//                              file:text-sm file:font-semibold\r\n//                              file:bg-indigo-50 file:text-indigo-700\r\n//                              hover:file:bg-indigo-100\"\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// const CLIENT_ID = \"370088918504-lolrb1et8pj4jdchnencktl3s43ukspg.apps.googleusercontent.com\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n\r\n//   // Google OAuth2 states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async (tokenResponse) => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     scope:\r\n//       \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please sign in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"gmail_token\", googleToken);\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\r\n//           Agentic AI Bulk Outreach\r\n//         </h1>\r\n\r\n//         {!googleToken ? (\r\n//           <button\r\n//             type=\"button\"\r\n//             className=\"btn btn-primary mb-6\"\r\n//             onClick={() => login()}\r\n//           >\r\n//             Sign in with Google to Send Emails\r\n//           </button>\r\n//         ) : (\r\n//           <div className=\"flex items-center mb-6\">\r\n//             <span className=\"text-green-800 font-bold mr-4\">\r\n//               Signed in as {userProfile?.email}\r\n//             </span>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-secondary\"\r\n//               onClick={logout}\r\n//             >\r\n//               Logout\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n//         {contacts.length > 0 && (\r\n//           <ContactsTable contacts={contacts} type={contactType} />\r\n//         )}\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n//             <div className=\"mt-6\">\r\n//               <label\r\n//                 className=\"block mb-2 font-semibold text-gray-700\"\r\n//                 htmlFor=\"attachment\"\r\n//               >\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 id=\"attachment\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n\r\n//   // NEW: sender email state\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Please enter sender email address.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\"http://localhost:8000/api/send_email_with_attachment\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       });\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">Agentic AI Bulk Outreach</h1>\r\n\r\n//         {/* NEW: Input field for sender email */}\r\n//         <div className=\"mb-6\">\r\n//           <label htmlFor=\"senderEmail\" className=\"font-semibold text-gray-700 mb-1 block\">\r\n//             Your Email Address\r\n//           </label>\r\n//           <input\r\n//             id=\"senderEmail\"\r\n//             type=\"email\"\r\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//             placeholder=\"youremail@example.com\"\r\n//             value={senderEmail}\r\n//             onChange={(e) => setSenderEmail(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n//             <div className=\"mt-6\">\r\n//               <label\r\n//                 htmlFor=\"attachment\"\r\n//                 className=\"block mb-2 font-semibold text-gray-700\"\r\n//               >\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 id=\"attachment\"\r\n//                 type=\"file\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                   file:rounded file:border-0\r\n//                   file:text-sm file:font-semibold\r\n//                   file:bg-indigo-50 file:text-indigo-700\r\n//                   hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n\r\n//   // Added sender email state\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", { role, country, profile, contact_type: contactType });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Please enter your email address.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700 \">\r\n//           Agentic AI Bulk Outreach\r\n//         </h1>\r\n\r\n//         {/* NEW sender email input */}\r\n//         <div className=\"mb-6\">\r\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n//             Your Email Address \r\n//           </label>\r\n//           <input\r\n//             id=\"senderEmail\"\r\n//             type=\"email\"\r\n//             placeholder=\"youremail@example.com\"\r\n//             value={senderEmail}\r\n//             onChange={(e) => setSenderEmail(e.target.value)}\r\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//           />\r\n//         </div>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n\r\n//             <div className=\"mt-6\">\r\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 type=\"file\"\r\n//                 id=\"attachment\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { GoogleOAuthProvider, useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// const CLIENT_ID = \"552274412896-2r5qc6oqsvgje1btr033i6u7uh1q0lpm.apps.googleusercontent.com\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   // OAuth states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async (tokenResponse) => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         // Fetch user profile info to display\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     setSenderEmail(\"\");\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please log in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Sender email address is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\r\n\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <GoogleOAuthProvider clientId={CLIENT_ID}>\r\n//       <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//         <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//           <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\r\n\r\n//           {!googleToken ? (\r\n//             <button className=\"btn btn-primary mb-6\" onClick={() => login()}>\r\n//               Sign in with Google to Send Emails\r\n//             </button>\r\n//           ) : (\r\n//             <div className=\"flex items-center mb-6\">\r\n//               <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\r\n//               <button className=\"btn btn-secondary\" onClick={logout}>\r\n//                 Logout\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n\r\n//           {/* Sender Email input can be edited if needed */}\r\n//           <div className=\"mb-6\">\r\n//             <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n//               Sender Email Address\r\n//             </label>\r\n//             <input\r\n//               id=\"senderEmail\"\r\n//               type=\"email\"\r\n//               placeholder=\"your-email@example.com\"\r\n//               value={senderEmail}\r\n//               onChange={(e) => setSenderEmail(e.target.value)}\r\n//               className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//             />\r\n//           </div>\r\n\r\n//           <SearchForm onSearch={handleSearch} />\r\n\r\n//           {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//           {templates.length > 0 && (\r\n//             <>\r\n//               <EmailSection\r\n//                 templates={templates}\r\n//                 onTemplateSelect={handleTemplateSelect}\r\n//                 body={body}\r\n//                 setBody={setBody}\r\n//                 subject={subject}\r\n//                 setSubject={setSubject}\r\n//                 onSend={handleSend}\r\n//                 status={status}\r\n//               />\r\n//               <div className=\"mt-6\">\r\n//                 <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                   Attach a file (optional)\r\n//                 </label>\r\n//                 <input\r\n//                   id=\"attachment\"\r\n//                   type=\"file\"\r\n//                   onChange={handleAttachmentChange}\r\n//                   className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                              file:rounded file:border-0\r\n//                              file:text-sm file:font-semibold\r\n//                              file:bg-indigo-50 file:text-indigo-700\r\n//                              hover:file:bg-indigo-100\"\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </GoogleOAuthProvider>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\n// import SearchForm from \"./components/SearchForm\";\r\n// import ContactsTable from \"./components/ContactsTable\";\r\n// import EmailSection from \"./components/EmailSection\";\r\n\r\n// function App() {\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [templates, setTemplates] = useState([]);\r\n//   const [role, setRole] = useState(\"\");\r\n//   const [country, setCountry] = useState(\"\");\r\n//   const [profile, setProfile] = useState(\"linkedin\");\r\n//   const [contactType, setContactType] = useState(\"gmail\");\r\n//   const [subject, setSubject] = useState(\"\");\r\n//   const [body, setBody] = useState(\"\");\r\n//   const [status, setStatus] = useState(\"\");\r\n//   const [attachmentFile, setAttachmentFile] = useState(null);\r\n//   const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n//   // OAuth states\r\n//   const [googleToken, setGoogleToken] = useState(null);\r\n//   const [userProfile, setUserProfile] = useState(null);\r\n\r\n//   const login = useGoogleLogin({\r\n//     onSuccess: async (tokenResponse) => {\r\n//       setGoogleToken(tokenResponse.access_token);\r\n//       try {\r\n//         // Fetch user profile info to display\r\n//         const resp = await axios.get(\r\n//           \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n//           { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n//         );\r\n//         setUserProfile(resp.data);\r\n//         setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\r\n//       } catch (e) {\r\n//         console.error(\"Failed fetching user info\", e);\r\n//       }\r\n//     },\r\n//     scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n//     flow: \"implicit\",\r\n//   });\r\n\r\n//   const logout = () => {\r\n//     setGoogleToken(null);\r\n//     setUserProfile(null);\r\n//     setSenderEmail(\"\");\r\n//     googleLogout();\r\n//   };\r\n\r\n//   const handleSearch = async (role, country, profile, contactType) => {\r\n//     setRole(role);\r\n//     setCountry(country);\r\n//     setProfile(profile);\r\n//     setContactType(contactType);\r\n//     const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n//       role,\r\n//       country,\r\n//       profile,\r\n//       contact_type: contactType,\r\n//     });\r\n//     setContacts(resp.data.contacts);\r\n//     console.log(\"Contacts Found:\", resp.data.contacts);\r\n//     const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n//     setTemplates(tmpl.data.templates);\r\n//   };\r\n\r\n//   const handleTemplateSelect = (t) => {\r\n//     setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//     setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n//   };\r\n\r\n//   const handleAttachmentChange = (e) => {\r\n//     if (e.target.files.length > 0) {\r\n//       setAttachmentFile(e.target.files[0]);\r\n//     } else {\r\n//       setAttachmentFile(null);\r\n//     }\r\n//   };\r\n\r\n//   const handleSend = async () => {\r\n//     if (contacts.length === 0) {\r\n//       setStatus(\"No contacts to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!googleToken) {\r\n//       setStatus(\"Please log in with Google to send emails.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (!senderEmail || senderEmail.trim() === \"\") {\r\n//       setStatus(\"Sender email address is required.\");\r\n//       return;\r\n//     }\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"emails\", contacts.join(\",\"));\r\n//     formData.append(\"subject\", subject);\r\n//     formData.append(\"body\", body);\r\n//     formData.append(\"sender_email\", senderEmail.trim());\r\n//     formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\r\n\r\n//     if (attachmentFile) {\r\n//       formData.append(\"attachment\", attachmentFile);\r\n//     }\r\n\r\n//     try {\r\n//       const resp = await axios.post(\r\n//         \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n//         formData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//           },\r\n//         }\r\n//       );\r\n//       setStatus(resp.data.message);\r\n//     } catch (error) {\r\n//       setStatus(\"Error sending emails.\");\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n//       <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n//         <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\r\n\r\n//         {!googleToken ? (\r\n//           <button className=\"btn btn-primary mb-6\" onClick={() => login()}>\r\n//             Sign in with Google to Send Emails\r\n//           </button>\r\n//         ) : (\r\n//           <div className=\"flex items-center mb-6\">\r\n//             <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\r\n//             <button className=\"btn btn-secondary\" onClick={logout}>\r\n//               Logout\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n\r\n//         {/* Sender Email input can be edited if needed */}\r\n//         <div className=\"mb-6\">\r\n//           <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n//             Sender Email Address\r\n//           </label>\r\n//           <input\r\n//             id=\"senderEmail\"\r\n//             type=\"email\"\r\n//             placeholder=\"your-email@example.com\"\r\n//             value={senderEmail}\r\n//             onChange={(e) => setSenderEmail(e.target.value)}\r\n//             className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n//           />\r\n//         </div>\r\n\r\n//         <SearchForm onSearch={handleSearch} />\r\n\r\n//         {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n//         {templates.length > 0 && (\r\n//           <>\r\n//             <EmailSection\r\n//               templates={templates}\r\n//               onTemplateSelect={handleTemplateSelect}\r\n//               body={body}\r\n//               setBody={setBody}\r\n//               subject={subject}\r\n//               setSubject={setSubject}\r\n//               onSend={handleSend}\r\n//               status={status}\r\n//             />\r\n//             <div className=\"mt-6\">\r\n//               <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n//                 Attach a file (optional)\r\n//               </label>\r\n//               <input\r\n//                 id=\"attachment\"\r\n//                 type=\"file\"\r\n//                 onChange={handleAttachmentChange}\r\n//                 className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n//                            file:rounded file:border-0\r\n//                            file:text-sm file:font-semibold\r\n//                            file:bg-indigo-50 file:text-indigo-700\r\n//                            hover:file:bg-indigo-100\"\r\n//               />\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGoogleLogin, googleLogout } from \"@react-oauth/google\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport ContactsTable from \"./components/ContactsTable\";\r\nimport EmailSection from \"./components/EmailSection\";\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useState([]);\r\n  const [templates, setTemplates] = useState([]);\r\n  const [role, setRole] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [profile, setProfile] = useState(\"linkedin\");\r\n  const [contactType, setContactType] = useState(\"gmail\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [attachmentFile, setAttachmentFile] = useState(null);\r\n  const [senderEmail, setSenderEmail] = useState(\"\");\r\n\r\n  // OAuth states\r\n  const [googleToken, setGoogleToken] = useState(null);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n\r\n  const login = useGoogleLogin({\r\n    onSuccess: async (tokenResponse) => {\r\n      setGoogleToken(tokenResponse.access_token);\r\n      try {\r\n        // Fetch user profile info to display\r\n        const resp = await axios.get(\r\n          \"https://www.googleapis.com/oauth2/v3/userinfo\",\r\n          { headers: { Authorization: `Bearer ${tokenResponse.access_token}` } }\r\n        );\r\n        setUserProfile(resp.data);\r\n        setSenderEmail(resp.data.email);  // Set sender email automatically from Google profile\r\n      } catch (e) {\r\n        console.error(\"Failed fetching user info\", e);\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Google Login Error:\", error);\r\n      setStatus(\"Google login failed. Please try again.\");\r\n    },\r\n    scope: \"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/userinfo.email\",\r\n  });\r\n\r\n  const logout = () => {\r\n    setGoogleToken(null);\r\n    setUserProfile(null);\r\n    setSenderEmail(\"\");\r\n    googleLogout();\r\n  };\r\n\r\n  const handleSearch = async (role, country, profile, contactType) => {\r\n    setRole(role);\r\n    setCountry(country);\r\n    setProfile(profile);\r\n    setContactType(contactType);\r\n    const resp = await axios.post(\"http://localhost:8000/api/search\", {\r\n      role,\r\n      country,\r\n      profile,\r\n      contact_type: contactType,\r\n    });\r\n    setContacts(resp.data.contacts);\r\n    console.log(\"Contacts Found:\", resp.data.contacts);\r\n    const tmpl = await axios.post(\"http://localhost:8000/api/templates\");\r\n    setTemplates(tmpl.data.templates);\r\n  };\r\n\r\n  const handleTemplateSelect = (t) => {\r\n    setSubject(t.subject.replace(\"{role}\", role).replace(\"{country}\", country));\r\n    setBody(t.body.replace(\"{role}\", role).replace(\"{country}\", country));\r\n  };\r\n\r\n  const handleAttachmentChange = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      setAttachmentFile(e.target.files[0]);\r\n    } else {\r\n      setAttachmentFile(null);\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (contacts.length === 0) {\r\n      setStatus(\"No contacts to send emails.\");\r\n      return;\r\n    }\r\n\r\n    if (!googleToken) {\r\n      setStatus(\"Please log in with Google to send emails.\");\r\n      return;\r\n    }\r\n\r\n    if (!senderEmail || senderEmail.trim() === \"\") {\r\n      setStatus(\"Sender email address is required.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"emails\", contacts.join(\",\"));\r\n    formData.append(\"subject\", subject);\r\n    formData.append(\"body\", body);\r\n    formData.append(\"sender_email\", senderEmail.trim());\r\n    formData.append(\"gmail_token\", googleToken); // OAuth2 token for Gmail API\r\n\r\n    if (attachmentFile) {\r\n      formData.append(\"attachment\", attachmentFile);\r\n    }\r\n\r\n    try {\r\n      const resp = await axios.post(\r\n        \"http://localhost:8000/api/send_email_with_attachment_oauth\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      setStatus(resp.data.message);\r\n    } catch (error) {\r\n      setStatus(\"Error sending emails.\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 animate-gradient\">\r\n      <div className=\"bg-white bg-opacity-90 rounded-lg shadow-xl p-8 mt-20 w-full max-w-5xl\">\r\n        <h1 className=\"text-4xl font-bold mb-6 text-center text-indigo-700\">Agentic AI Bulk Outreach</h1>\r\n\r\n        {!googleToken ? (\r\n          <button \r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mb-6\"\r\n            onClick={() => login()}\r\n          >\r\n            Sign in with Google to Send Emails\r\n          </button>\r\n        ) : (\r\n          <div className=\"flex items-center mb-6\">\r\n            <span className=\"text-green-800 font-bold mr-4\">Signed in as {userProfile?.email}</span>\r\n            <button \r\n              className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-3 rounded text-sm\"\r\n              onClick={logout}\r\n            >\r\n              Logout\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Sender Email input can be edited if needed */}\r\n        <div className=\"mb-6\">\r\n          <label htmlFor=\"senderEmail\" className=\"block font-semibold text-gray-700 mb-1\">\r\n            Sender Email Address\r\n          </label>\r\n          <input\r\n            id=\"senderEmail\"\r\n            type=\"email\"\r\n            placeholder=\"your-email@example.com\"\r\n            value={senderEmail}\r\n            onChange={(e) => setSenderEmail(e.target.value)}\r\n            className=\"w-full px-3 py-2 border border-gray-300 rounded\"\r\n          />\r\n        </div>\r\n\r\n        <SearchForm onSearch={handleSearch} />\r\n\r\n        {contacts.length > 0 && <ContactsTable contacts={contacts} type={contactType} />}\r\n\r\n        {templates.length > 0 && (\r\n          <>\r\n            <EmailSection\r\n              templates={templates}\r\n              onTemplateSelect={handleTemplateSelect}\r\n              body={body}\r\n              setBody={setBody}\r\n              subject={subject}\r\n              setSubject={setSubject}\r\n              onSend={handleSend}\r\n              status={status}\r\n            />\r\n            <div className=\"mt-6\">\r\n              <label className=\"block mb-2 font-semibold text-gray-700\" htmlFor=\"attachment\">\r\n                Attach a file (optional)\r\n              </label>\r\n              <input\r\n                id=\"attachment\"\r\n                type=\"file\"\r\n                onChange={handleAttachmentChange}\r\n                className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4\r\n                           file:rounded file:border-0\r\n                           file:text-sm file:font-semibold\r\n                           file:bg-indigo-50 file:text-indigo-700\r\n                           hover:file:bg-indigo-100\"\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAacA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,YAAY,QAAQ,qBAAqB;AAClE,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,UAAU,CAAC;EAClD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,OAAO,CAAC;EACvD,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2B,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC6B,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMuC,KAAK,GAAGrC,cAAc,CAAC;IAC3BsC,SAAS,EAAE,MAAOC,aAAa,IAAK;MAClCL,cAAc,CAACK,aAAa,CAACC,YAAY,CAAC;MAC1C,IAAI;QACF;QACA,MAAMC,IAAI,GAAG,MAAM1C,KAAK,CAAC2C,GAAG,CAC1B,+CAA+C,EAC/C;UAAEC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASL,aAAa,CAACC,YAAa;UAAE;QAAE,CACvE,CAAC;QACDJ,cAAc,CAACK,IAAI,CAACI,IAAI,CAAC;QACzBb,cAAc,CAACS,IAAI,CAACI,IAAI,CAACC,KAAK,CAAC,CAAC,CAAE;MACpC,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,CAAC,CAAC;MAC/C;IACF,CAAC;IACDG,OAAO,EAAGD,KAAK,IAAK;MAClBD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CrB,SAAS,CAAC,wCAAwC,CAAC;IACrD,CAAC;IACDuB,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBlB,cAAc,CAAC,IAAI,CAAC;IACpBE,cAAc,CAAC,IAAI,CAAC;IACpBJ,cAAc,CAAC,EAAE,CAAC;IAClB/B,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMoD,YAAY,GAAG,MAAAA,CAAOtC,IAAI,EAAEE,OAAO,EAAEE,OAAO,EAAEE,WAAW,KAAK;IAClEL,OAAO,CAACD,IAAI,CAAC;IACbG,UAAU,CAACD,OAAO,CAAC;IACnBG,UAAU,CAACD,OAAO,CAAC;IACnBG,cAAc,CAACD,WAAW,CAAC;IAC3B,MAAMoB,IAAI,GAAG,MAAM1C,KAAK,CAACuD,IAAI,CAAC,kCAAkC,EAAE;MAChEvC,IAAI;MACJE,OAAO;MACPE,OAAO;MACPoC,YAAY,EAAElC;IAChB,CAAC,CAAC;IACFT,WAAW,CAAC6B,IAAI,CAACI,IAAI,CAAClC,QAAQ,CAAC;IAC/BqC,OAAO,CAACQ,GAAG,CAAC,iBAAiB,EAAEf,IAAI,CAACI,IAAI,CAAClC,QAAQ,CAAC;IAClD,MAAM8C,IAAI,GAAG,MAAM1D,KAAK,CAACuD,IAAI,CAAC,qCAAqC,CAAC;IACpExC,YAAY,CAAC2C,IAAI,CAACZ,IAAI,CAAChC,SAAS,CAAC;EACnC,CAAC;EAED,MAAM6C,oBAAoB,GAAIC,CAAC,IAAK;IAClCnC,UAAU,CAACmC,CAAC,CAACpC,OAAO,CAACqC,OAAO,CAAC,QAAQ,EAAE7C,IAAI,CAAC,CAAC6C,OAAO,CAAC,WAAW,EAAE3C,OAAO,CAAC,CAAC;IAC3ES,OAAO,CAACiC,CAAC,CAAClC,IAAI,CAACmC,OAAO,CAAC,QAAQ,EAAE7C,IAAI,CAAC,CAAC6C,OAAO,CAAC,WAAW,EAAE3C,OAAO,CAAC,CAAC;EACvE,CAAC;EAED,MAAM4C,sBAAsB,GAAId,CAAC,IAAK;IACpC,IAAIA,CAAC,CAACe,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7BlC,iBAAiB,CAACiB,CAAC,CAACe,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,MAAM;MACLjC,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EAED,MAAMmC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAItD,QAAQ,CAACqD,MAAM,KAAK,CAAC,EAAE;MACzBpC,SAAS,CAAC,6BAA6B,CAAC;MACxC;IACF;IAEA,IAAI,CAACK,WAAW,EAAE;MAChBL,SAAS,CAAC,2CAA2C,CAAC;MACtD;IACF;IAEA,IAAI,CAACG,WAAW,IAAIA,WAAW,CAACmC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7CtC,SAAS,CAAC,mCAAmC,CAAC;MAC9C;IACF;IAEA,MAAMuC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE1D,QAAQ,CAAC2D,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7CH,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE9C,OAAO,CAAC;IACnC4C,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE5C,IAAI,CAAC;IAC7B0C,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEtC,WAAW,CAACmC,IAAI,CAAC,CAAC,CAAC;IACnDC,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEpC,WAAW,CAAC,CAAC,CAAC;;IAE7C,IAAIJ,cAAc,EAAE;MAClBsC,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAExC,cAAc,CAAC;IAC/C;IAEA,IAAI;MACF,MAAMY,IAAI,GAAG,MAAM1C,KAAK,CAACuD,IAAI,CAC3B,4DAA4D,EAC5Da,QAAQ,EACR;QACExB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACDf,SAAS,CAACa,IAAI,CAACI,IAAI,CAAC0B,OAAO,CAAC;IAC9B,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdrB,SAAS,CAAC,uBAAuB,CAAC;MAClCoB,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACE3C,OAAA;IAAKkE,SAAS,EAAC,oHAAoH;IAAAC,QAAA,eACjInE,OAAA;MAAKkE,SAAS,EAAC,wEAAwE;MAAAC,QAAA,gBACrFnE,OAAA;QAAIkE,SAAS,EAAC,qDAAqD;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAEhG,CAAC5C,WAAW,gBACX3B,OAAA;QACEkE,SAAS,EAAC,2EAA2E;QACrFM,OAAO,EAAEA,CAAA,KAAMzC,KAAK,CAAC,CAAE;QAAAoC,QAAA,EACxB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETvE,OAAA;QAAKkE,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCnE,OAAA;UAAMkE,SAAS,EAAC,+BAA+B;UAAAC,QAAA,GAAC,eAAa,EAACtC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,KAAK;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxFvE,OAAA;UACEkE,SAAS,EAAC,4EAA4E;UACtFM,OAAO,EAAE1B,MAAO;UAAAqB,QAAA,EACjB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN,eAGDvE,OAAA;QAAKkE,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACnBnE,OAAA;UAAOyE,OAAO,EAAC,aAAa;UAACP,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAC;QAEhF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRvE,OAAA;UACE0E,EAAE,EAAC,aAAa;UAChBC,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,wBAAwB;UACpCC,KAAK,EAAEpD,WAAY;UACnBqD,QAAQ,EAAGrC,CAAC,IAAKf,cAAc,CAACe,CAAC,CAACe,MAAM,CAACqB,KAAK,CAAE;UAChDX,SAAS,EAAC;QAAiD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENvE,OAAA,CAACJ,UAAU;QAACmF,QAAQ,EAAEhC;MAAa;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAErClE,QAAQ,CAACqD,MAAM,GAAG,CAAC,iBAAI1D,OAAA,CAACH,aAAa;QAACQ,QAAQ,EAAEA,QAAS;QAACsE,IAAI,EAAE5D;MAAY;QAAAqD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE/EhE,SAAS,CAACmD,MAAM,GAAG,CAAC,iBACnB1D,OAAA,CAAAE,SAAA;QAAAiE,QAAA,gBACEnE,OAAA,CAACF,YAAY;UACXS,SAAS,EAAEA,SAAU;UACrByE,gBAAgB,EAAE5B,oBAAqB;UACvCjC,IAAI,EAAEA,IAAK;UACXC,OAAO,EAAEA,OAAQ;UACjBH,OAAO,EAAEA,OAAQ;UACjBC,UAAU,EAAEA,UAAW;UACvB+D,MAAM,EAAEtB,UAAW;UACnBtC,MAAM,EAAEA;QAAO;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eACFvE,OAAA;UAAKkE,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBnE,OAAA;YAAOkE,SAAS,EAAC,wCAAwC;YAACO,OAAO,EAAC,YAAY;YAAAN,QAAA,EAAC;UAE/E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRvE,OAAA;YACE0E,EAAE,EAAC,YAAY;YACfC,IAAI,EAAC,MAAM;YACXG,QAAQ,EAAEvB,sBAAuB;YACjCW,SAAS,EAAC;UAI0B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnE,EAAA,CAnMQD,GAAG;EAAA,QAiBIT,cAAc;AAAA;AAAAwF,EAAA,GAjBrB/E,GAAG;AAqMZ,eAAeA,GAAG;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}